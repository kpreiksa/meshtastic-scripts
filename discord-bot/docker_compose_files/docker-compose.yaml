version: '3.8'

services:
  postgres:
    image: "postgres:${POSTGRES_VERSION}"
    container_name: postgres_db
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      TZ: "${TZ}"
    volumes:
      - "postgres_data:${POSTGRES_VOLUME}"
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - "GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}"
      - "GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}"
      - "TZ=${TZ}"
    volumes:
      - "grafana-storage:${GF_VOLUME}"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  meshbot:
    image: "${MY_DOCKER_REG}/${MY_DOCKER_NAME}:${MY_DOCKER_VERSION}"
    container_name: meshtastic_discord_bot
    privileged: true
    environment:
      - "DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}"
      - "DISCORD_CHANNEL_ID=${DISCORD_CHANNEL_ID}"
      - "TIME_ZONE=${TZ}"
      - "CHANNEL_0=${CHANNEL_0}"
      - "CHANNEL_1=${CHANNEL_1}"
      - "INTERFACE_METHOD=${INTERFACE_METHOD}"
      - "INTERFACE_BLE_NODE=${INTERFACE_BLE_NODE}"
      - "DB_TYPE=${DB_TYPE}"
      - "DB_HOST=${DB_HOST}"
      - "DB_PORT=${DB_PORT}"
      - "DB_NAME=${DB_NAME}"
      - "DB_USERNAME=${DB_USERNAME}"
      - "DB_PASSWORD=${DB_PASSWORD}"
      - "TZ=${TZ}"
      - "MAX_CONNECTION_RETRIES=5"
      - "RECONNECT_INTERVAL=30"
    volumes:
      - "meshbot-storage:/app/storage"
      - "/var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket"
    devices:
      - "/dev/bus/usb"
    restart: "on-failure:5"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "ps -ef | grep python | grep -v grep || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
  grafana-storage:
  meshbot-storage: